from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import RFE
from sklearn.preprocessing import LabelEncoder, StandardScaler, PolynomialFeatures
import pandas as pd
import numpy as np

df = pd.read_csv('ClaMP_Integrated-5184.csv')

label_encoders = {}
for column in df.select_dtypes(include=['object']).columns:
    le = LabelEncoder()
    df[column] = le.fit_transform(df[column])
    label_encoders[column] = le

X = df.drop(columns=['class'])
y = df['class']

print("Missing values before filling:")
print(X.isnull().sum())

X = X.fillna(X.mean())

print("Missing values after filling:")
print(X.isnull().sum())

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

print("Summary statistics after standardization:")
print(pd.DataFrame(X_scaled, columns=X.columns).describe())

clf = RandomForestClassifier()

selector = RFE(estimator=clf, n_features_to_select=10)
selector = selector.fit(X_scaled, y)

selected_features = X.columns[selector.support_]
print("Selected features:")
for feature in selected_features:
    print(feature)
